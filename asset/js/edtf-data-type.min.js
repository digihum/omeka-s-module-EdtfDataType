/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var EdtfDataType;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./asset/src/js/index.js":
/*!*******************************!*\
  !*** ./asset/src/js/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   listen: () => (/* binding */ listen)\n/* harmony export */ });\n/* harmony import */ var edtf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! edtf */ \"./node_modules/edtf/index.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n// Path: build/html/modules/EdtfDataType/asset/src/index.js\n\n\n\n\n// add listener to the #edtf-value input for changes\n\nconst parser = function(container) {\n\n    var outputString = \"\"\n    var shortExplanation = \"\";\n    var caretLocation, caretOffset = 0;\n\n    try {\n        \n        (0,edtf__WEBPACK_IMPORTED_MODULE_0__.parse)(container.value);\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()(container).closest('.edtf').find('.invalid-value').empty();\n        const validString = \n        \"<div class='valid-string-container'>\" +\n             \"<span class='o-icon-edit icon' title='Correct value' aria-label='accepted value'></span>\"+\n             \"<span class='valuesuggest-id'>\" + container.value + \"</span>\" +\n         \"</div>\";\n        var validStringContainer = jquery__WEBPACK_IMPORTED_MODULE_1___default()(container).closest(\".edtf\").find(\".valid-string-container\");\n        \n        if(validStringContainer.length > 0) {\n            jquery__WEBPACK_IMPORTED_MODULE_1___default()(validStringContainer).replaceWith(validString);\n        } else {\n                jquery__WEBPACK_IMPORTED_MODULE_1___default()(container).closest(\".edtf\").prepend(validString);\n        }\n        outputString, shortExplanation = \"\";\n\n    } catch (e) {\n        \n        var message = String(e.message)\n\n        const lines = message.split('\\n');\n        lines.forEach((line,i) => {\n            switch (true) {\n                case /Unexpected/.test(line):\n                    shortExplanation = line.substring(0, line.indexOf(\".\"));\n                    break;\n                case /Syntax/.test(line):\n                    //console.log(\"-- \" + lines[i+2]);\n                    // get the consistently second line after the syntax error line\n                    // only take the section after the space\n                    outputString = lines[i+2].split(\" \")[1];\n                    caretOffset = lines[i+2].split(\" \")[0].length + 1;\n                    break;\n                case /\\^/.test(line):\n                    //console.log(\"-- \" + line);\n                    // count the charaters in the string before the caret accounting for the spaces that are removed\n                    caretLocation = line.indexOf(\"^\") - caretOffset;\n                    break                         \n                default:\n                    console.log(\"-- \" + line + \"\\n\");\n                    break\n            }\n        })\n\n        // @todo if there is a match... output the human readable to the screen! Something like valuesuggest:\n\n        if (outputString.length > 0) {\n            outputString = \"<div><p class='outputstring'>\" + \n                outputString.substring(0, caretLocation ) +\n                \"<span class='caret'>\" +  outputString.substring(caretLocation, caretLocation + 1) + \"</span>\" +\n                outputString.substring(caretLocation + 1) + \n                \" [\" + shortExplanation + \"]\" +\n                \"</p></div>\";\n        }\n\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()(container).closest('.edtf').find('.invalid-value').html(outputString);\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()(container).closest('.edtf').find('.valid-string-container').remove();\n    }\n}\n\n\nconst listen = function() {\n    //needs to hook into the button that add's new fields as only the first one activates...\n    \n    var input = document.querySelector('.edtf input.edtf-value');\n        \n        parser(input)\n\n        input.addEventListener('input', function(e)\n        {   \n            parser(e.target)\n        });\n    }\n\n\n\n\n\n\n\n//# sourceURL=webpack://EdtfDataType/./asset/src/js/index.js?");

/***/ }),

/***/ "./node_modules/nearley/lib/nearley.js":
/*!*********************************************!*\
  !*** ./node_modules/nearley/lib/nearley.js ***!
  \*********************************************/
/***/ (function(module) {

eval("(function(root, factory) {\n    if ( true && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/nearley/lib/nearley.js?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = window["jQuery"];

/***/ }),

/***/ "./node_modules/edtf/locale-data/index.cjs":
/*!*************************************************!*\
  !*** ./node_modules/edtf/locale-data/index.cjs ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const en = __webpack_require__(/*! ./en-US.json */ \"./node_modules/edtf/locale-data/en-US.json\")\nconst es = __webpack_require__(/*! ./es-ES.json */ \"./node_modules/edtf/locale-data/es-ES.json\")\nconst de = __webpack_require__(/*! ./de-DE.json */ \"./node_modules/edtf/locale-data/de-DE.json\")\nconst fr = __webpack_require__(/*! ./fr-FR.json */ \"./node_modules/edtf/locale-data/fr-FR.json\")\nconst it = __webpack_require__(/*! ./it-IT.json */ \"./node_modules/edtf/locale-data/it-IT.json\")\nconst ja = __webpack_require__(/*! ./ja-JA.json */ \"./node_modules/edtf/locale-data/ja-JA.json\")\n\nconst alias = (lang, ...regions) => {\n  for (let region of regions)\n    data[`${lang}-${region}`] = data[lang]\n}\n\nconst data = { en, es, de, fr, it, ja }\n\nalias('en', 'AU', 'CA', 'GB', 'NZ', 'SA', 'US')\nalias('de', 'AT', 'CH', 'DE')\nalias('fr', 'CH', 'FR')\n\nmodule.exports = data\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/locale-data/index.cjs?");

/***/ }),

/***/ "./node_modules/edtf/index.js":
/*!************************************!*\
  !*** ./node_modules/edtf/index.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bitmask: () => (/* reexport safe */ _src_bitmask_js__WEBPACK_IMPORTED_MODULE_2__.Bitmask),\n/* harmony export */   Century: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.Century),\n/* harmony export */   Date: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.Date),\n/* harmony export */   Decade: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.Decade),\n/* harmony export */   Interval: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.Interval),\n/* harmony export */   List: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.List),\n/* harmony export */   Season: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.Season),\n/* harmony export */   Set: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.Set),\n/* harmony export */   Year: () => (/* reexport safe */ _src_types_js__WEBPACK_IMPORTED_MODULE_1__.Year),\n/* harmony export */   \"default\": () => (/* reexport safe */ _src_edtf_js__WEBPACK_IMPORTED_MODULE_0__.edtf),\n/* harmony export */   defaults: () => (/* reexport safe */ _src_parser_js__WEBPACK_IMPORTED_MODULE_3__.defaults),\n/* harmony export */   format: () => (/* reexport safe */ _src_format_js__WEBPACK_IMPORTED_MODULE_4__.format),\n/* harmony export */   parse: () => (/* reexport safe */ _src_parser_js__WEBPACK_IMPORTED_MODULE_3__.parse)\n/* harmony export */ });\n/* harmony import */ var _src_edtf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/edtf.js */ \"./node_modules/edtf/src/edtf.js\");\n/* harmony import */ var _src_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/types.js */ \"./node_modules/edtf/src/types.js\");\n/* harmony import */ var _src_bitmask_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/bitmask.js */ \"./node_modules/edtf/src/bitmask.js\");\n/* harmony import */ var _src_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/parser.js */ \"./node_modules/edtf/src/parser.js\");\n/* harmony import */ var _src_format_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/format.js */ \"./node_modules/edtf/src/format.js\");\n\n\n\n\n\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/index.js?");

/***/ }),

/***/ "./node_modules/edtf/src/assert.js":
/*!*****************************************!*\
  !*** ./node_modules/edtf/src/assert.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   equal: () => (/* binding */ equal)\n/* harmony export */ });\nfunction assert(value, message) {\n  return equal(!!value, true, message ||\n    `expected \"${value}\" to be ok`)\n}\n\nfunction equal(actual, expected, message) {\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected)\n    return true\n\n  if (Number.isNaN(actual) && Number.isNaN(expected))\n    return true\n\n  throw new Error(message ||\n    `expected \"${actual}\" to equal \"${expected}\"`)\n}\n\nassert.equal = equal\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/assert.js?");

/***/ }),

/***/ "./node_modules/edtf/src/bitmask.js":
/*!******************************************!*\
  !*** ./node_modules/edtf/src/bitmask.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bitmask: () => (/* binding */ Bitmask)\n/* harmony export */ });\nconst DAY = /^days?$/i\nconst MONTH = /^months?$/i\nconst YEAR = /^years?$/i\nconst SYMBOL = /^[xX]$/\nconst SYMBOLS = /[xX]/g\nconst PATTERN = /^[0-9xXdDmMyY]{8}$/\nconst YYYYMMDD = 'YYYYMMDD'.split('')\nconst MAXDAYS = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nconst { floor, pow, max, min } = Math\n\n\n/**\n * Bitmasks are used to set Unspecified, Uncertain and\n * Approximate flags for a Date. The bitmask for one\n * feature corresponds to a numeric value based on the\n * following pattern:\n *\n *           YYYYMMDD\n *           --------\n *   Day     00000011\n *   Month   00001100\n *   Year    11110000\n *\n */\nclass Bitmask {\n\n  static test(a, b) {\n    return this.convert(a) & this.convert(b)\n  }\n\n  static convert(value = 0) { // eslint-disable-line complexity\n    value = value || 0\n\n    if (value instanceof Bitmask) return value.value\n\n    switch (typeof value) {\n    case 'number': return value\n\n    case 'boolean': return value ? Bitmask.YMD : 0\n\n    case 'string':\n      if (DAY.test(value)) return Bitmask.DAY\n      if (MONTH.test(value)) return Bitmask.MONTH\n      if (YEAR.test(value)) return Bitmask.YEAR\n      if (PATTERN.test(value)) return Bitmask.compute(value)\n      // fall through!\n\n    default:\n      throw new Error(`invalid value: ${value}`)\n    }\n  }\n\n  static compute(value) {\n    return value.split('').reduce((memo, c, idx) =>\n      (memo | (SYMBOL.test(c) ? pow(2, idx) : 0)), 0)\n  }\n\n  static values(mask, digit = 0) {\n    let num = Bitmask.numbers(mask, digit).split('')\n    let values = [Number(num.slice(0, 4).join(''))]\n\n    if (num.length > 4) values.push(Number(num.slice(4, 6).join('')))\n    if (num.length > 6) values.push(Number(num.slice(6, 8).join('')))\n\n    return Bitmask.normalize(values)\n  }\n\n  static numbers(mask, digit = 0) {\n    return mask.replace(SYMBOLS, digit)\n  }\n\n  static normalize(values) {\n    if (values.length > 1)\n      values[1] = min(11, max(0, values[1] - 1))\n\n    if (values.length > 2)\n      values[2] = min(MAXDAYS[values[1]] || NaN, max(1, values[2]))\n\n    return values\n  }\n\n\n  constructor(value = 0) {\n    this.value = Bitmask.convert(value)\n  }\n\n  test(value = 0) {\n    return this.value & Bitmask.convert(value)\n  }\n\n  bit(k) {\n    return this.value & pow(2, k)\n  }\n\n  get day() { return this.test(Bitmask.DAY) }\n\n  get month() { return this.test(Bitmask.MONTH) }\n\n  get year() { return this.test(Bitmask.YEAR) }\n\n\n  add(value) {\n    return (this.value = this.value | Bitmask.convert(value)), this\n  }\n\n  set(value = 0) {\n    return (this.value = Bitmask.convert(value)), this\n  }\n\n  mask(input = YYYYMMDD, offset = 0, symbol = 'X') {\n    return input.map((c, idx) => this.bit(offset + idx) ? symbol : c)\n  }\n\n  masks(values, symbol = 'X') {\n    let offset = 0\n\n    return values.map(value => {\n      let mask = this.mask(value.split(''), offset, symbol)\n      offset = offset + mask.length\n\n      return mask.join('')\n    })\n  }\n\n  // eslint-disable-next-line complexity\n  max([year, month, day]) {\n    if (!year) return []\n\n    year = Number(\n      (this.test(Bitmask.YEAR)) ? this.masks([year], '9')[0] : year\n    )\n\n    if (!month) return [year]\n\n    month = Number(month) - 1\n\n    switch (this.test(Bitmask.MONTH)) {\n    case Bitmask.MONTH:\n      month = 11\n      break\n    case Bitmask.MX:\n      month = (month < 9) ? 8 : 11\n      break\n    case Bitmask.XM:\n      month = (month + 1) % 10\n      month = (month < 3) ? month + 9 : month - 1\n      break\n    }\n\n    if (!day) return [year, month]\n\n    day = Number(day)\n\n    switch (this.test(Bitmask.DAY)) {\n    case Bitmask.DAY:\n      day = MAXDAYS[month]\n      break\n    case Bitmask.DX:\n      day = min(MAXDAYS[month], day + (9 - (day % 10)))\n      break\n    case Bitmask.XD:\n      day = day % 10\n\n      if (month === 1) {\n        day = (day === 9 && !leap(year)) ? day + 10 : day + 20\n\n      } else {\n        day = (day < 2) ? day + 30 : day + 20\n        if (day > MAXDAYS[month]) day = day - 10\n      }\n\n      break\n    }\n\n    if (month === 1 && day > 28 && !leap(year)) {\n      day = 28\n    }\n\n    return [year, month, day]\n  }\n\n  // eslint-disable-next-line complexity\n  min([year, month, day]) {\n    if (!year) return []\n\n    year = Number(\n      (this.test(Bitmask.YEAR)) ? this.masks([year], '0')[0] : year\n    )\n\n    if (month == null) return [year]\n\n    month = Number(month) - 1\n\n    switch (this.test(Bitmask.MONTH)) {\n    case Bitmask.MONTH:\n    case Bitmask.XM:\n      month = 0\n      break\n    case Bitmask.MX:\n      month = (month < 9) ? 0 : 9\n      break\n    }\n\n    if (!day) return [year, month]\n\n    day = Number(day)\n\n    switch (this.test(Bitmask.DAY)) {\n    case Bitmask.DAY:\n      day = 1\n      break\n    case Bitmask.DX:\n      day = max(1, floor(day / 10) * 10)\n      break\n    case Bitmask.XD:\n      day = max(1, day % 10)\n      break\n    }\n\n    return [year, month, day]\n  }\n\n  marks(values, symbol = '?') {\n    return values\n      .map((value, idx) => [\n        this.qualified(idx * 2) ? symbol : '',\n        value,\n        this.qualified(idx * 2 + 1) ? symbol : ''\n      ].join(''))\n  }\n\n  qualified(idx) { // eslint-disable-line complexity\n    switch (idx) {\n    case 1:\n      return this.value === Bitmask.YEAR ||\n        (this.value & Bitmask.YEAR) && !(this.value & Bitmask.MONTH)\n    case 2:\n      return this.value === Bitmask.MONTH ||\n        (this.value & Bitmask.MONTH) && !(this.value & Bitmask.YEAR)\n    case 3:\n      return this.value === Bitmask.YM\n    case 4:\n      return this.value === Bitmask.DAY ||\n        (this.value & Bitmask.DAY) && (this.value !== Bitmask.YMD)\n    case 5:\n      return this.value === Bitmask.YMD\n    default:\n      return false\n    }\n  }\n\n  qualify(idx) {\n    return (this.value = this.value | Bitmask.UA[idx]), this\n  }\n\n  toJSON() {\n    return this.value\n  }\n\n  toString(symbol = 'X') {\n    return this.masks(['YYYY', 'MM', 'DD'], symbol).join('-')\n  }\n}\n\nBitmask.prototype.is = Bitmask.prototype.test\n\nfunction leap(year) {\n  if (year % 4 > 0) return false\n  if (year % 100 > 0) return true\n  if (year % 400 > 0) return false\n  return true\n}\n\nBitmask.DAY   = Bitmask.D = Bitmask.compute('yyyymmxx')\nBitmask.MONTH = Bitmask.M = Bitmask.compute('yyyyxxdd')\nBitmask.YEAR  = Bitmask.Y = Bitmask.compute('xxxxmmdd')\n\nBitmask.MD  = Bitmask.M | Bitmask.D\nBitmask.YMD = Bitmask.Y | Bitmask.MD\nBitmask.YM  = Bitmask.Y | Bitmask.M\n\nBitmask.YYXX = Bitmask.compute('yyxxmmdd')\nBitmask.YYYX = Bitmask.compute('yyyxmmdd')\nBitmask.XXXX = Bitmask.compute('xxxxmmdd')\n\nBitmask.DX = Bitmask.compute('yyyymmdx')\nBitmask.XD = Bitmask.compute('yyyymmxd')\nBitmask.MX = Bitmask.compute('yyyymxdd')\nBitmask.XM = Bitmask.compute('yyyyxmdd')\n\n/*\n * Map each UA symbol position to a mask.\n *\n *   ~YYYY~-~MM~-~DD~\n *   0    1 2  3 4  5\n */\nBitmask.UA = [\n  Bitmask.YEAR,\n  Bitmask.YEAR,   // YEAR !DAY\n  Bitmask.MONTH,\n  Bitmask.YM,\n  Bitmask.DAY,    // YEARDAY\n  Bitmask.YMD\n]\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/bitmask.js?");

/***/ }),

/***/ "./node_modules/edtf/src/century.js":
/*!******************************************!*\
  !*** ./node_modules/edtf/src/century.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Century: () => (/* binding */ Century)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/edtf/src/assert.js\");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date.js */ \"./node_modules/edtf/src/date.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface.js */ \"./node_modules/edtf/src/interface.js\");\n\n\n\n\nconst { abs, floor } = Math\nconst V = new WeakMap()\n\nclass Century extends _interface_js__WEBPACK_IMPORTED_MODULE_2__.ExtDateTime {\n  constructor(input) {\n    super()\n\n    V.set(this, [])\n\n    this.uncertain = false\n    this.approximate = false\n\n    switch (typeof input) {\n    case 'number':\n      this.century = input\n      break\n\n    case 'string':\n      input = Century.parse(input)\n\n    // eslint-disable-next-line no-fallthrough\n    case 'object':\n      if (Array.isArray(input))\n        input = { values: input }\n\n      {\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input !== null)\n        if (input.type) _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal('Century', input.type)\n\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input.values)\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input.values.length === 1)\n\n        this.century = input.values[0]\n        this.uncertain = !!input.uncertain\n        this.approximate = !!input.approximate\n      }\n      break\n\n    case 'undefined':\n      this.year = new Date().getUTCFullYear()\n      break\n\n    default:\n      throw new RangeError('Invalid century value')\n    }\n  }\n\n  get century() {\n    return this.values[0]\n  }\n\n  set century(century) {\n    century = floor(Number(century))\n    ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(abs(century) < 100, `invalid century: ${century}`)\n    this.values[0] = century\n  }\n\n  get year() {\n    return this.values[0] * 100\n  }\n\n  set year(year) {\n    this.century = year / 100\n  }\n\n  get values() {\n    return V.get(this)\n  }\n\n  get min() {\n    return _date_js__WEBPACK_IMPORTED_MODULE_1__.Date.UTC(this.year, 0)\n  }\n\n  get max() {\n    return _date_js__WEBPACK_IMPORTED_MODULE_1__.Date.UTC(this.year + 100, 0) - 1\n  }\n\n  toEDTF() {\n    let century = Century.pad(this.century)\n\n    if (this.uncertain)\n      century = century + '?'\n\n    if (this.approximate)\n      century = (century + '~').replace(/\\?~/, '%')\n\n    return century\n  }\n\n  static pad(number) {\n    let k = abs(number)\n    let sign = (k === number) ? '' : '-'\n\n    if (k < 10)   return `${sign}0${k}`\n\n    return `${number}`\n  }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/century.js?");

/***/ }),

/***/ "./node_modules/edtf/src/date.js":
/*!***************************************!*\
  !*** ./node_modules/edtf/src/date.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Date: () => (/* binding */ Date),\n/* harmony export */   pad: () => (/* binding */ pad)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/edtf/src/assert.js\");\n/* harmony import */ var _bitmask_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bitmask.js */ \"./node_modules/edtf/src/bitmask.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface.js */ \"./node_modules/edtf/src/interface.js\");\n/* harmony import */ var _mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mixin.js */ \"./node_modules/edtf/src/mixin.js\");\n/* harmony import */ var _format_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./format.js */ \"./node_modules/edtf/src/format.js\");\n\n\n\n\n\n\nconst { abs } = Math\nconst { isArray } = Array\n\nconst P = new WeakMap()\nconst U = new WeakMap()\nconst A = new WeakMap()\nconst X = new WeakMap()\n\nconst PM = [_bitmask_js__WEBPACK_IMPORTED_MODULE_1__.Bitmask.YMD, _bitmask_js__WEBPACK_IMPORTED_MODULE_1__.Bitmask.Y, _bitmask_js__WEBPACK_IMPORTED_MODULE_1__.Bitmask.YM, _bitmask_js__WEBPACK_IMPORTED_MODULE_1__.Bitmask.YMD]\n\nclass Date extends globalThis.Date {\n  constructor(...args) { // eslint-disable-line complexity\n    let precision = 0\n    let uncertain, approximate, unspecified\n\n    switch (args.length) {\n    case 0:\n      break\n\n    case 1:\n      switch (typeof args[0]) {\n      case 'number':\n        break\n\n      case 'string':\n        args = [Date.parse(args[0])]\n\n      // eslint-disable-next-line no-fallthrough\n      case 'object':\n        if (isArray(args[0]))\n          args[0] = { values: args[0] }\n\n        {\n          let obj = args[0]\n\n          ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj != null)\n          if (obj.type) _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal('Date', obj.type)\n\n          if (obj.values && obj.values.length) {\n            precision = obj.values.length\n            args = obj.values.slice()\n\n            // ECMA Date constructor needs at least two date parts!\n            if (args.length < 2) args.push(0)\n\n            if (obj.offset) {\n              if (args.length < 3) args.push(1)\n              while (args.length < 5) args.push(0)\n\n              // ECMA Date constructor handles overflows so we\n              // simply add the offset!\n              args[4] = args[4] + obj.offset\n            }\n\n            args = [_interface_js__WEBPACK_IMPORTED_MODULE_2__.ExtDateTime.UTC(...args)]\n          }\n\n          ({ uncertain, approximate, unspecified } = obj)\n        }\n        break\n\n      default:\n        throw new RangeError('Invalid time value')\n      }\n\n      break\n\n    default:\n      precision = args.length\n    }\n\n    super(...args)\n\n    this.precision = precision\n\n    this.uncertain = uncertain\n    this.approximate = approximate\n    this.unspecified = unspecified\n  }\n\n  set precision(value) {\n    P.set(this, (value > 3) ? 0 : Number(value))\n  }\n\n  get precision() {\n    return P.get(this)\n  }\n\n  set uncertain(value) {\n    U.set(this, this.bits(value))\n  }\n\n  get uncertain() {\n    return U.get(this)\n  }\n\n  set approximate(value) {\n    A.set(this, this.bits(value))\n  }\n\n  get approximate() {\n    return A.get(this)\n  }\n\n  set unspecified(value) {\n    X.set(this, new _bitmask_js__WEBPACK_IMPORTED_MODULE_1__.Bitmask(value))\n  }\n\n  get unspecified() {\n    return X.get(this)\n  }\n\n  get atomic() {\n    return !(\n      this.precision || this.unspecified.value\n    )\n  }\n\n  get min() {\n    // TODO uncertain and approximate\n\n    if (this.unspecified.value && this.year < 0) {\n      let values = this.unspecified.max(this.values.map(Date.pad))\n      values[0] = -values[0]\n      return (new Date({ values })).getTime()\n    }\n\n    return this.getTime()\n  }\n\n  get max() {\n    // TODO uncertain and approximate\n    return (this.atomic) ? this.getTime() : this.next().getTime() - 1\n  }\n\n  get year() {\n    return this.getUTCFullYear()\n  }\n\n  get month() {\n    return this.getUTCMonth()\n  }\n\n  get date() {\n    return this.getUTCDate()\n  }\n\n  get hours() {\n    return this.getUTCHours()\n  }\n\n  get minutes() {\n    return this.getUTCMinutes()\n  }\n\n  get seconds() {\n    return this.getUTCSeconds()\n  }\n\n  get values() {\n    switch (this.precision) {\n    case 1:\n      return [this.year]\n    case 2:\n      return [this.year, this.month]\n    case 3:\n      return [this.year, this.month, this.date]\n    default:\n      return [\n        this.year, this.month, this.date, this.hours, this.minutes, this.seconds\n      ]\n    }\n  }\n\n  /**\n   * Returns the next second, day, month, or year, depending on\n   * the current date's precision. Uncertain, approximate and\n   * unspecified masks are copied.\n   */\n  next(k = 1) {\n    let { values, unspecified, uncertain, approximate } = this\n\n    if (unspecified.value) {\n      let bc = values[0] < 0\n\n      values = (k < 0) ^ bc ?\n        unspecified.min(values.map(Date.pad)) :\n        unspecified.max(values.map(Date.pad))\n\n      if (bc) values[0] = -values[0]\n    }\n\n    values.push(values.pop() + k)\n\n    return new Date({ values, unspecified, uncertain, approximate })\n  }\n\n  prev(k = 1) {\n    return this.next(-k)\n  }\n\n  *[Symbol.iterator]() {\n    let cur = this\n\n    while (cur <= this.max) {\n      yield cur\n      cur = cur.next()\n    }\n  }\n\n  toEDTF() {\n    if (!this.precision) return this.toISOString()\n\n    let sign = (this.year < 0) ? '-' : ''\n    let values = this.values.map(Date.pad)\n\n    if (this.unspecified.value)\n      return sign + this.unspecified.masks(values).join('-')\n\n    if (this.uncertain.value)\n      values = this.uncertain.marks(values, '?')\n\n    if (this.approximate.value) {\n      values = this.approximate.marks(values, '~')\n        .map(value => value.replace(/(~\\?)|(\\?~)/, '%'))\n    }\n\n    return  sign + values.join('-')\n  }\n\n  format(...args) {\n    return (0,_format_js__WEBPACK_IMPORTED_MODULE_4__.format)(this, ...args)\n  }\n\n  static pad(number, idx = 0) {\n    if (!idx) { // idx 0 = year, 1 = month, ...\n      let k = abs(number)\n\n      if (k < 10)   return `000${k}`\n      if (k < 100)  return `00${k}`\n      if (k < 1000) return `0${k}`\n\n      return `${k}`\n    }\n\n    if (idx === 1) number = number + 1\n\n    return (number < 10) ? `0${number}` : `${number}`\n  }\n\n  bits(value) {\n    if (value === true)\n      value = PM[this.precision]\n\n    return new _bitmask_js__WEBPACK_IMPORTED_MODULE_1__.Bitmask(value)\n  }\n}\n\n(0,_mixin_js__WEBPACK_IMPORTED_MODULE_3__.mixin)(Date, _interface_js__WEBPACK_IMPORTED_MODULE_2__.ExtDateTime)\n\nconst pad = Date.pad\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/date.js?");

/***/ }),

/***/ "./node_modules/edtf/src/decade.js":
/*!*****************************************!*\
  !*** ./node_modules/edtf/src/decade.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decade: () => (/* binding */ Decade)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/edtf/src/assert.js\");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date.js */ \"./node_modules/edtf/src/date.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface.js */ \"./node_modules/edtf/src/interface.js\");\n\n\n\n\nconst { abs, floor } = Math\nconst V = new WeakMap()\n\n\nclass Decade extends _interface_js__WEBPACK_IMPORTED_MODULE_2__.ExtDateTime {\n  constructor(input) {\n    super()\n\n    V.set(this, [])\n\n    this.uncertain = false\n    this.approximate = false\n\n    switch (typeof input) {\n    case 'number':\n      this.decade = input\n      break\n\n    case 'string':\n      input = Decade.parse(input)\n\n    // eslint-disable-next-line no-fallthrough\n    case 'object':\n      if (Array.isArray(input))\n        input = { values: input }\n\n      {\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input !== null)\n        if (input.type) _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal('Decade', input.type)\n\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input.values)\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input.values.length === 1)\n\n        this.decade = input.values[0]\n        this.uncertain = !!input.uncertain\n        this.approximate = !!input.approximate\n      }\n      break\n\n    case 'undefined':\n      this.year = new Date().getUTCFullYear()\n      break\n\n    default:\n      throw new RangeError('Invalid decade value')\n    }\n  }\n\n  get decade() {\n    return this.values[0]\n  }\n\n  set decade(decade) {\n    decade = floor(Number(decade))\n    ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(abs(decade) < 1000, `invalid decade: ${decade}`)\n    this.values[0] = decade\n  }\n\n  get year() {\n    return this.values[0] * 10\n  }\n\n  set year(year) {\n    this.decade = year / 10\n  }\n\n  get values() {\n    return V.get(this)\n  }\n\n  get min() {\n    return _date_js__WEBPACK_IMPORTED_MODULE_1__.Date.UTC(this.year, 0)\n  }\n\n  get max() {\n    return _date_js__WEBPACK_IMPORTED_MODULE_1__.Date.UTC(this.year + 10, 0) - 1\n  }\n\n  toEDTF() {\n    let decade = Decade.pad(this.decade)\n\n    if (this.uncertain)\n      decade = decade + '?'\n\n    if (this.approximate)\n      decade = (decade + '~').replace(/\\?~/, '%')\n\n    return decade\n  }\n\n  static pad(number) {\n    let k = abs(number)\n    let sign = (k === number) ? '' : '-'\n\n    if (k < 10)   return `${sign}00${k}`\n    if (k < 100)  return `${sign}0${k}`\n\n    return `${number}`\n  }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/decade.js?");

/***/ }),

/***/ "./node_modules/edtf/src/edtf.js":
/*!***************************************!*\
  !*** ./node_modules/edtf/src/edtf.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   edtf: () => (/* binding */ edtf)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/edtf/src/types.js\");\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser.js */ \"./node_modules/edtf/src/parser.js\");\n\n\n\nconst UNIX_TIME = /^\\d{5,}$/\n\nfunction edtf(...args) {\n  if (!args.length)\n    return new _types_js__WEBPACK_IMPORTED_MODULE_0__.Date()\n\n  if (args.length === 1) {\n    switch (typeof args[0]) {\n    case 'object':\n      return new (_types_js__WEBPACK_IMPORTED_MODULE_0__[args[0].type] || _types_js__WEBPACK_IMPORTED_MODULE_0__.Date)(args[0])\n    case 'number':\n      return new _types_js__WEBPACK_IMPORTED_MODULE_0__.Date(args[0])\n    case 'string':\n      if ((UNIX_TIME).test(args[0]))\n        return new _types_js__WEBPACK_IMPORTED_MODULE_0__.Date(Number(args[0]))\n    }\n  }\n\n  let res = (0,_parser_js__WEBPACK_IMPORTED_MODULE_1__.parse)(...args)\n  return new _types_js__WEBPACK_IMPORTED_MODULE_0__[res.type](res)\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/edtf.js?");

/***/ }),

/***/ "./node_modules/edtf/src/format.js":
/*!*****************************************!*\
  !*** ./node_modules/edtf/src/format.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   getFormat: () => (/* binding */ getFormat)\n/* harmony export */ });\n/* harmony import */ var _locale_data_index_cjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../locale-data/index.cjs */ \"./node_modules/edtf/locale-data/index.cjs\");\n\n\nconst { assign } = Object\n\nconst noTime = {\n  timeZone: 'UTC',\n  timeZoneName: undefined,\n  hour: undefined,\n  minute: undefined,\n  second: undefined\n}\n\nconst DEFAULTS = [\n  {},\n  assign({ weekday: undefined, day: undefined, month: undefined }, noTime),\n  assign({ weekday: undefined, day: undefined }, noTime),\n  assign({}, noTime),\n]\n\n\nfunction getCacheId(...args) {\n  let id = []\n\n  for (let arg of args) {\n    if (arg && typeof arg === 'object') {\n      id.push(getOrderedProps(arg))\n    } else {\n      id.push(arg)\n    }\n  }\n\n  return JSON.stringify(id)\n\n}\n\nfunction getOrderedProps(obj) {\n  let props = []\n  let keys = Object.getOwnPropertyNames(obj)\n\n  for (let key of keys.sort()) {\n    props.push({ [key]: obj[key] })\n  }\n\n  return props\n}\n\nfunction getFormat(date, locale, options) {\n  let opts = {}\n\n  switch (date.precision) {\n  case 3:\n    opts.day = 'numeric'\n    // eslint-disable-next-line no-fallthrough\n  case 2:\n    opts.month = 'numeric'\n    // eslint-disable-next-line no-fallthrough\n  case 1:\n    opts.year = 'numeric'\n    break\n  }\n\n  assign(opts, options, DEFAULTS[date.precision])\n\n  let id = getCacheId(locale, opts)\n\n  if (!format.cache.has(id)) {\n    format.cache.set(id, new Intl.DateTimeFormat(locale, opts))\n  }\n\n  return format.cache.get(id)\n}\n\nfunction getPatternsFor(fmt) {\n  const { locale, weekday, month, year } = fmt.resolvedOptions()\n  const lc = _locale_data_index_cjs__WEBPACK_IMPORTED_MODULE_0__[locale]\n\n  if (lc == null) return null\n\n  const variant = (weekday || month === 'long') ? 'long' :\n    (!month || year === '2-digit') ? 'short' : 'medium'\n\n  return {\n    approximate: lc.date.approximate[variant],\n    uncertain: lc.date.uncertain[variant]\n  }\n}\n\nfunction isDMY(type) {\n  return type === 'day' || type === 'month' || type === 'year'\n}\n\nfunction mask(date, parts) {\n  let string = ''\n\n  for (let { type, value } of parts) {\n    string += (isDMY(type) && date.unspecified.is(type)) ?\n      value.replace(/./g, 'X') :\n      value\n  }\n\n  return string\n}\n\nfunction format(date, locale = 'en-US', options = {}) {\n  const fmt = getFormat(date, locale, options)\n  const pat = getPatternsFor(fmt)\n\n  if (!date.isEDTF || pat == null) {\n    return fmt.format(date)\n  }\n\n  let string = (!date.unspecified.value || !fmt.formatToParts) ?\n    fmt.format(date) :\n    mask(date, fmt.formatToParts(date))\n\n\n  if (date.approximate.value) {\n    string = pat.approximate.replace('%D', string)\n  }\n\n  if (date.uncertain.value) {\n    string = pat.uncertain.replace('%D', string)\n  }\n\n  return string\n}\n\nformat.cache = new Map()\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/format.js?");

/***/ }),

/***/ "./node_modules/edtf/src/grammar.js":
/*!******************************************!*\
  !*** ./node_modules/edtf/src/grammar.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./node_modules/edtf/src/util.js\");\n/* harmony import */ var _bitmask_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bitmask.js */ \"./node_modules/edtf/src/bitmask.js\");\n// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\n\n  \n\n  \n\n  const {\n    DAY, MONTH, YEAR, YMD, YM, MD, YYXX, YYYX, XXXX\n  } = _bitmask_js__WEBPACK_IMPORTED_MODULE_1__.Bitmask\nlet Lexer = undefined;\nlet ParserRules = [\n    {\"name\": \"edtf\", \"symbols\": [\"L0\"], \"postprocess\": id},\n    {\"name\": \"edtf\", \"symbols\": [\"L1\"], \"postprocess\": id},\n    {\"name\": \"edtf\", \"symbols\": [\"L2\"], \"postprocess\": id},\n    {\"name\": \"edtf\", \"symbols\": [\"L3\"], \"postprocess\": id},\n    {\"name\": \"L0\", \"symbols\": [\"date_time\"], \"postprocess\": id},\n    {\"name\": \"L0\", \"symbols\": [\"century\"], \"postprocess\": id},\n    {\"name\": \"L0\", \"symbols\": [\"L0i\"], \"postprocess\": id},\n    {\"name\": \"L0i\", \"symbols\": [\"date_time\", {\"literal\":\"/\"}, \"date_time\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(0)},\n    {\"name\": \"century\", \"symbols\": [\"positive_century\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.century)(data[0])},\n    {\"name\": \"century$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"century\", \"symbols\": [\"century$string$1\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.century)(0)},\n    {\"name\": \"century\", \"symbols\": [{\"literal\":\"-\"}, \"positive_century\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.century)(-data[1])},\n    {\"name\": \"positive_century\", \"symbols\": [\"positive_digit\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"positive_century\", \"symbols\": [{\"literal\":\"0\"}, \"positive_digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"date_time\", \"symbols\": [\"date\"], \"postprocess\": id},\n    {\"name\": \"date_time\", \"symbols\": [\"datetime\"], \"postprocess\": id},\n    {\"name\": \"date\", \"symbols\": [\"year\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)(data)},\n    {\"name\": \"date\", \"symbols\": [\"year_month\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)(data[0])},\n    {\"name\": \"date\", \"symbols\": [\"year_month_day\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)(data[0])},\n    {\"name\": \"year\", \"symbols\": [\"positive_year\"], \"postprocess\": id},\n    {\"name\": \"year\", \"symbols\": [\"negative_year\"], \"postprocess\": id},\n    {\"name\": \"year$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}, {\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"year\", \"symbols\": [\"year$string$1\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"positive_year\", \"symbols\": [\"positive_digit\", \"digit\", \"digit\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"positive_year\", \"symbols\": [{\"literal\":\"0\"}, \"positive_digit\", \"digit\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"positive_year$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_year\", \"symbols\": [\"positive_year$string$1\", \"positive_digit\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"positive_year$string$2\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_year\", \"symbols\": [\"positive_year$string$2\", \"positive_digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"negative_year\", \"symbols\": [{\"literal\":\"-\"}, \"positive_year\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"year_month\", \"symbols\": [\"year\", {\"literal\":\"-\"}, \"month\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(0, 2)},\n    {\"name\": \"year_month_day\", \"symbols\": [\"year\", {\"literal\":\"-\"}, \"month_day\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(0, 2)},\n    {\"name\": \"month\", \"symbols\": [\"d01_12\"], \"postprocess\": id},\n    {\"name\": \"month_day\", \"symbols\": [\"m31\", {\"literal\":\"-\"}, \"day\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(0, 2)},\n    {\"name\": \"month_day\", \"symbols\": [\"m30\", {\"literal\":\"-\"}, \"d01_30\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(0, 2)},\n    {\"name\": \"month_day$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"2\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"month_day\", \"symbols\": [\"month_day$string$1\", {\"literal\":\"-\"}, \"d01_29\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(0, 2)},\n    {\"name\": \"day\", \"symbols\": [\"d01_31\"], \"postprocess\": id},\n    {\"name\": \"datetime$ebnf$1$subexpression$1\", \"symbols\": [\"timezone\"], \"postprocess\": id},\n    {\"name\": \"datetime$ebnf$1\", \"symbols\": [\"datetime$ebnf$1$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"datetime$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"datetime\", \"symbols\": [\"year_month_day\", {\"literal\":\"T\"}, \"time\", \"datetime$ebnf$1\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.datetime},\n    {\"name\": \"time\", \"symbols\": [\"hours\", {\"literal\":\":\"}, \"minutes\", {\"literal\":\":\"}, \"seconds\", \"milliseconds\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(0, 2, 4, 5)},\n    {\"name\": \"time\", \"symbols\": [\"hours\", {\"literal\":\":\"}, \"minutes\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(0, 2)},\n    {\"name\": \"time$string$1\", \"symbols\": [{\"literal\":\"2\"}, {\"literal\":\"4\"}, {\"literal\":\":\"}, {\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"time$ebnf$1$string$1\", \"symbols\": [{\"literal\":\":\"}, {\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"time$ebnf$1\", \"symbols\": [\"time$ebnf$1$string$1\"], \"postprocess\": id},\n    {\"name\": \"time$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"time\", \"symbols\": [\"time$string$1\", \"time$ebnf$1\"], \"postprocess\": () => [24, 0, 0]},\n    {\"name\": \"hours\", \"symbols\": [\"d00_23\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"minutes\", \"symbols\": [\"d00_59\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"seconds\", \"symbols\": [\"d00_59\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"milliseconds\", \"symbols\": []},\n    {\"name\": \"milliseconds\", \"symbols\": [{\"literal\":\".\"}, \"d3\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data.slice(1))},\n    {\"name\": \"timezone\", \"symbols\": [{\"literal\":\"Z\"}], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.zero},\n    {\"name\": \"timezone$subexpression$1\", \"symbols\": [{\"literal\":\"-\"}]},\n    {\"name\": \"timezone$subexpression$1\", \"symbols\": [{\"literal\":\"−\"}]},\n    {\"name\": \"timezone\", \"symbols\": [\"timezone$subexpression$1\", \"offset\"], \"postprocess\": data => -data[1]},\n    {\"name\": \"timezone\", \"symbols\": [{\"literal\":\"+\"}, \"positive_offset\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pick)(1)},\n    {\"name\": \"positive_offset\", \"symbols\": [\"offset\"], \"postprocess\": id},\n    {\"name\": \"positive_offset$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_offset$ebnf$1\", \"symbols\": [{\"literal\":\":\"}], \"postprocess\": id},\n    {\"name\": \"positive_offset$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"positive_offset$string$2\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_offset\", \"symbols\": [\"positive_offset$string$1\", \"positive_offset$ebnf$1\", \"positive_offset$string$2\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.zero},\n    {\"name\": \"positive_offset$subexpression$1$string$1\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"2\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_offset$subexpression$1\", \"symbols\": [\"positive_offset$subexpression$1$string$1\"]},\n    {\"name\": \"positive_offset$subexpression$1$string$2\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"3\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_offset$subexpression$1\", \"symbols\": [\"positive_offset$subexpression$1$string$2\"]},\n    {\"name\": \"positive_offset$ebnf$2\", \"symbols\": [{\"literal\":\":\"}], \"postprocess\": id},\n    {\"name\": \"positive_offset$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"positive_offset\", \"symbols\": [\"positive_offset$subexpression$1\", \"positive_offset$ebnf$2\", \"minutes\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[0]) * 60 + data[2]},\n    {\"name\": \"positive_offset$string$3\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"4\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_offset$ebnf$3\", \"symbols\": [{\"literal\":\":\"}], \"postprocess\": id},\n    {\"name\": \"positive_offset$ebnf$3\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"positive_offset$string$4\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_offset\", \"symbols\": [\"positive_offset$string$3\", \"positive_offset$ebnf$3\", \"positive_offset$string$4\"], \"postprocess\": () => 840},\n    {\"name\": \"positive_offset\", \"symbols\": [\"d00_14\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[0]) * 60},\n    {\"name\": \"offset$ebnf$1\", \"symbols\": [{\"literal\":\":\"}], \"postprocess\": id},\n    {\"name\": \"offset$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"offset\", \"symbols\": [\"d01_11\", \"offset$ebnf$1\", \"minutes\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[0]) * 60 + data[2]},\n    {\"name\": \"offset$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"offset$ebnf$2\", \"symbols\": [{\"literal\":\":\"}], \"postprocess\": id},\n    {\"name\": \"offset$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"offset\", \"symbols\": [\"offset$string$1\", \"offset$ebnf$2\", \"d01_59\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[2])},\n    {\"name\": \"offset$string$2\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"2\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"offset$ebnf$3\", \"symbols\": [{\"literal\":\":\"}], \"postprocess\": id},\n    {\"name\": \"offset$ebnf$3\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"offset$string$3\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"offset\", \"symbols\": [\"offset$string$2\", \"offset$ebnf$3\", \"offset$string$3\"], \"postprocess\": () => 720},\n    {\"name\": \"offset\", \"symbols\": [\"d01_12\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[0]) * 60},\n    {\"name\": \"L1\", \"symbols\": [\"L1d\"], \"postprocess\": id},\n    {\"name\": \"L1\", \"symbols\": [\"L1Y\"], \"postprocess\": id},\n    {\"name\": \"L1\", \"symbols\": [\"L1S\"], \"postprocess\": id},\n    {\"name\": \"L1\", \"symbols\": [\"L1i\"], \"postprocess\": id},\n    {\"name\": \"L1d\", \"symbols\": [\"date_ua\"], \"postprocess\": id},\n    {\"name\": \"L1d\", \"symbols\": [\"L1X\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.merge)(0, { type: 'Date', level: 1 })},\n    {\"name\": \"date_ua\", \"symbols\": [\"date\", \"UA\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.merge)(0, 1, { level: 1 })},\n    {\"name\": \"L1i\", \"symbols\": [\"L1i_date\", {\"literal\":\"/\"}, \"L1i_date\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(1)},\n    {\"name\": \"L1i\", \"symbols\": [\"date_time\", {\"literal\":\"/\"}, \"L1i_date\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(1)},\n    {\"name\": \"L1i\", \"symbols\": [\"L1i_date\", {\"literal\":\"/\"}, \"date_time\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(1)},\n    {\"name\": \"L1i_date\", \"symbols\": [], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.nothing},\n    {\"name\": \"L1i_date\", \"symbols\": [\"date_ua\"], \"postprocess\": id},\n    {\"name\": \"L1i_date\", \"symbols\": [\"INFINITY\"], \"postprocess\": id},\n    {\"name\": \"INFINITY$string$1\", \"symbols\": [{\"literal\":\".\"}, {\"literal\":\".\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"INFINITY\", \"symbols\": [\"INFINITY$string$1\"], \"postprocess\": () => Infinity},\n    {\"name\": \"L1X$string$1\", \"symbols\": [{\"literal\":\"-\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1X\", \"symbols\": [\"nd4\", {\"literal\":\"-\"}, \"md\", \"L1X$string$1\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1X$string$2\", \"symbols\": [{\"literal\":\"-\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"-\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1X\", \"symbols\": [\"nd4\", \"L1X$string$2\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1X$string$3\", \"symbols\": [{\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"-\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"-\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1X\", \"symbols\": [\"L1X$string$3\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1X$string$4\", \"symbols\": [{\"literal\":\"-\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1X\", \"symbols\": [\"nd4\", \"L1X$string$4\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1X$string$5\", \"symbols\": [{\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"-\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1X\", \"symbols\": [\"L1X$string$5\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1X$string$6\", \"symbols\": [{\"literal\":\"X\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1X\", \"symbols\": [\"nd2\", \"L1X$string$6\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1X\", \"symbols\": [\"nd3\", {\"literal\":\"X\"}], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1X$string$7\", \"symbols\": [{\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1X\", \"symbols\": [\"L1X$string$7\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L1Y\", \"symbols\": [{\"literal\":\"Y\"}, \"d5+\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.year)([(0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[1])], 1)},\n    {\"name\": \"L1Y$string$1\", \"symbols\": [{\"literal\":\"Y\"}, {\"literal\":\"-\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"L1Y\", \"symbols\": [\"L1Y$string$1\", \"d5+\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.year)([-(0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[1])], 1)},\n    {\"name\": \"UA\", \"symbols\": [{\"literal\":\"?\"}], \"postprocess\": () => ({ uncertain: true })},\n    {\"name\": \"UA\", \"symbols\": [{\"literal\":\"~\"}], \"postprocess\": () => ({ approximate: true })},\n    {\"name\": \"UA\", \"symbols\": [{\"literal\":\"%\"}], \"postprocess\": () => ({ approximate: true, uncertain: true })},\n    {\"name\": \"L1S\", \"symbols\": [\"year\", {\"literal\":\"-\"}, \"d21_24\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.season)(data, 1)},\n    {\"name\": \"L2\", \"symbols\": [\"L2d\"], \"postprocess\": id},\n    {\"name\": \"L2\", \"symbols\": [\"L2Y\"], \"postprocess\": id},\n    {\"name\": \"L2\", \"symbols\": [\"L2S\"], \"postprocess\": id},\n    {\"name\": \"L2\", \"symbols\": [\"L2D\"], \"postprocess\": id},\n    {\"name\": \"L2\", \"symbols\": [\"L2C\"], \"postprocess\": id},\n    {\"name\": \"L2\", \"symbols\": [\"L2i\"], \"postprocess\": id},\n    {\"name\": \"L2\", \"symbols\": [\"set\"], \"postprocess\": id},\n    {\"name\": \"L2\", \"symbols\": [\"list\"], \"postprocess\": id},\n    {\"name\": \"L2d\", \"symbols\": [\"ua_date\"], \"postprocess\": id},\n    {\"name\": \"L2d\", \"symbols\": [\"L2X\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.merge)(0, { type: 'Date', level: 2 })},\n    {\"name\": \"L2D\", \"symbols\": [\"decade\"], \"postprocess\": id},\n    {\"name\": \"L2D\", \"symbols\": [\"decade\", \"UA\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.merge)(0, 1)},\n    {\"name\": \"L2C\", \"symbols\": [\"century\"], \"postprocess\": id},\n    {\"name\": \"L2C\", \"symbols\": [\"century\", \"UA\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.merge)(0, 1, {level: 2})},\n    {\"name\": \"ua_date\", \"symbols\": [\"ua_year\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.qualify},\n    {\"name\": \"ua_date\", \"symbols\": [\"ua_year_month\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.qualify},\n    {\"name\": \"ua_date\", \"symbols\": [\"ua_year_month_day\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.qualify},\n    {\"name\": \"ua_year\", \"symbols\": [\"UA\", \"year\"], \"postprocess\": data => [data]},\n    {\"name\": \"ua_year_month$macrocall$2\", \"symbols\": [\"year\"]},\n    {\"name\": \"ua_year_month$macrocall$1$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_year_month$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_year_month$macrocall$1$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_year_month$macrocall$1$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_year_month$macrocall$1\", \"symbols\": [\"ua_year_month$macrocall$1$ebnf$1\", \"ua_year_month$macrocall$2\", \"ua_year_month$macrocall$1$ebnf$2\"]},\n    {\"name\": \"ua_year_month$macrocall$4\", \"symbols\": [\"month\"]},\n    {\"name\": \"ua_year_month$macrocall$3$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_year_month$macrocall$3$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_year_month$macrocall$3$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_year_month$macrocall$3$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_year_month$macrocall$3\", \"symbols\": [\"ua_year_month$macrocall$3$ebnf$1\", \"ua_year_month$macrocall$4\", \"ua_year_month$macrocall$3$ebnf$2\"]},\n    {\"name\": \"ua_year_month\", \"symbols\": [\"ua_year_month$macrocall$1\", {\"literal\":\"-\"}, \"ua_year_month$macrocall$3\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pluck)(0, 2)},\n    {\"name\": \"ua_year_month_day$macrocall$2\", \"symbols\": [\"year\"]},\n    {\"name\": \"ua_year_month_day$macrocall$1$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_year_month_day$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_year_month_day$macrocall$1$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_year_month_day$macrocall$1$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_year_month_day$macrocall$1\", \"symbols\": [\"ua_year_month_day$macrocall$1$ebnf$1\", \"ua_year_month_day$macrocall$2\", \"ua_year_month_day$macrocall$1$ebnf$2\"]},\n    {\"name\": \"ua_year_month_day\", \"symbols\": [\"ua_year_month_day$macrocall$1\", {\"literal\":\"-\"}, \"ua_month_day\"], \"postprocess\": data => [data[0], ...data[2]]},\n    {\"name\": \"ua_month_day$macrocall$2\", \"symbols\": [\"m31\"]},\n    {\"name\": \"ua_month_day$macrocall$1$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$1$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$1$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$1\", \"symbols\": [\"ua_month_day$macrocall$1$ebnf$1\", \"ua_month_day$macrocall$2\", \"ua_month_day$macrocall$1$ebnf$2\"]},\n    {\"name\": \"ua_month_day$macrocall$4\", \"symbols\": [\"day\"]},\n    {\"name\": \"ua_month_day$macrocall$3$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$3$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$3$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$3$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$3\", \"symbols\": [\"ua_month_day$macrocall$3$ebnf$1\", \"ua_month_day$macrocall$4\", \"ua_month_day$macrocall$3$ebnf$2\"]},\n    {\"name\": \"ua_month_day\", \"symbols\": [\"ua_month_day$macrocall$1\", {\"literal\":\"-\"}, \"ua_month_day$macrocall$3\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pluck)(0, 2)},\n    {\"name\": \"ua_month_day$macrocall$6\", \"symbols\": [\"m30\"]},\n    {\"name\": \"ua_month_day$macrocall$5$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$5$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$5$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$5$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$5\", \"symbols\": [\"ua_month_day$macrocall$5$ebnf$1\", \"ua_month_day$macrocall$6\", \"ua_month_day$macrocall$5$ebnf$2\"]},\n    {\"name\": \"ua_month_day$macrocall$8\", \"symbols\": [\"d01_30\"]},\n    {\"name\": \"ua_month_day$macrocall$7$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$7$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$7$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$7$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$7\", \"symbols\": [\"ua_month_day$macrocall$7$ebnf$1\", \"ua_month_day$macrocall$8\", \"ua_month_day$macrocall$7$ebnf$2\"]},\n    {\"name\": \"ua_month_day\", \"symbols\": [\"ua_month_day$macrocall$5\", {\"literal\":\"-\"}, \"ua_month_day$macrocall$7\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pluck)(0, 2)},\n    {\"name\": \"ua_month_day$macrocall$10$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"2\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"ua_month_day$macrocall$10\", \"symbols\": [\"ua_month_day$macrocall$10$string$1\"]},\n    {\"name\": \"ua_month_day$macrocall$9$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$9$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$9$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$9$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$9\", \"symbols\": [\"ua_month_day$macrocall$9$ebnf$1\", \"ua_month_day$macrocall$10\", \"ua_month_day$macrocall$9$ebnf$2\"]},\n    {\"name\": \"ua_month_day$macrocall$12\", \"symbols\": [\"d01_29\"]},\n    {\"name\": \"ua_month_day$macrocall$11$ebnf$1\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$11$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$11$ebnf$2\", \"symbols\": [\"UA\"], \"postprocess\": id},\n    {\"name\": \"ua_month_day$macrocall$11$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"ua_month_day$macrocall$11\", \"symbols\": [\"ua_month_day$macrocall$11$ebnf$1\", \"ua_month_day$macrocall$12\", \"ua_month_day$macrocall$11$ebnf$2\"]},\n    {\"name\": \"ua_month_day\", \"symbols\": [\"ua_month_day$macrocall$9\", {\"literal\":\"-\"}, \"ua_month_day$macrocall$11\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.pluck)(0, 2)},\n    {\"name\": \"L2X\", \"symbols\": [\"dx4\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L2X\", \"symbols\": [\"dx4\", {\"literal\":\"-\"}, \"mx\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"L2X\", \"symbols\": [\"dx4\", {\"literal\":\"-\"}, \"mdx\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.masked)()},\n    {\"name\": \"mdx\", \"symbols\": [\"m31x\", {\"literal\":\"-\"}, \"d31x\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"mdx\", \"symbols\": [\"m30x\", {\"literal\":\"-\"}, \"d30x\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"mdx$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"2\"}, {\"literal\":\"-\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"mdx\", \"symbols\": [\"mdx$string$1\", \"d29x\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"L2i\", \"symbols\": [\"L2i_date\", {\"literal\":\"/\"}, \"L2i_date\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(2)},\n    {\"name\": \"L2i\", \"symbols\": [\"date_time\", {\"literal\":\"/\"}, \"L2i_date\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(2)},\n    {\"name\": \"L2i\", \"symbols\": [\"L2i_date\", {\"literal\":\"/\"}, \"date_time\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(2)},\n    {\"name\": \"L2i_date\", \"symbols\": [], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.nothing},\n    {\"name\": \"L2i_date\", \"symbols\": [\"ua_date\"], \"postprocess\": id},\n    {\"name\": \"L2i_date\", \"symbols\": [\"L2X\"], \"postprocess\": id},\n    {\"name\": \"L2i_date\", \"symbols\": [\"INFINITY\"], \"postprocess\": id},\n    {\"name\": \"L2Y\", \"symbols\": [\"exp_year\"], \"postprocess\": id},\n    {\"name\": \"L2Y\", \"symbols\": [\"exp_year\", \"significant_digits\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.merge)(0, 1)},\n    {\"name\": \"L2Y\", \"symbols\": [\"L1Y\", \"significant_digits\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.merge)(0, 1, { level: 2 })},\n    {\"name\": \"L2Y\", \"symbols\": [\"year\", \"significant_digits\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.year)([data[0]], 2, data[1])},\n    {\"name\": \"significant_digits\", \"symbols\": [{\"literal\":\"S\"}, \"positive_digit\"], \"postprocess\": data => ({ significant: (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[1]) })},\n    {\"name\": \"exp_year\", \"symbols\": [{\"literal\":\"Y\"}, \"exp\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.year)([data[1]], 2)},\n    {\"name\": \"exp_year$string$1\", \"symbols\": [{\"literal\":\"Y\"}, {\"literal\":\"-\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"exp_year\", \"symbols\": [\"exp_year$string$1\", \"exp\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.year)([-data[1]], 2)},\n    {\"name\": \"exp\", \"symbols\": [\"digits\", {\"literal\":\"E\"}, \"digits\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[0]) * Math.pow(10, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.num)(data[2]))},\n    {\"name\": \"L2S\", \"symbols\": [\"year\", {\"literal\":\"-\"}, \"d25_41\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.season)(data, 2)},\n    {\"name\": \"decade\", \"symbols\": [\"positive_decade\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.decade)(data[0])},\n    {\"name\": \"decade$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"decade\", \"symbols\": [\"decade$string$1\"], \"postprocess\": () => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.decade)(0)},\n    {\"name\": \"decade\", \"symbols\": [{\"literal\":\"-\"}, \"positive_decade\"], \"postprocess\": data => (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.decade)(-data[1])},\n    {\"name\": \"positive_decade\", \"symbols\": [\"positive_digit\", \"digit\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"positive_decade\", \"symbols\": [{\"literal\":\"0\"}, \"positive_digit\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"positive_decade$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"positive_decade\", \"symbols\": [\"positive_decade$string$1\", \"positive_digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"set\", \"symbols\": [\"LSB\", \"OL\", \"RSB\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.list},\n    {\"name\": \"list\", \"symbols\": [\"LLB\", \"OL\", \"RLB\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.list},\n    {\"name\": \"LSB\", \"symbols\": [{\"literal\":\"[\"}], \"postprocess\": () => ({ type: 'Set' })},\n    {\"name\": \"LSB$string$1\", \"symbols\": [{\"literal\":\"[\"}, {\"literal\":\".\"}, {\"literal\":\".\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"LSB\", \"symbols\": [\"LSB$string$1\"], \"postprocess\": () => ({ type: 'Set', earlier: true })},\n    {\"name\": \"LLB\", \"symbols\": [{\"literal\":\"{\"}], \"postprocess\": () => ({ type: 'List' })},\n    {\"name\": \"LLB$string$1\", \"symbols\": [{\"literal\":\"{\"}, {\"literal\":\".\"}, {\"literal\":\".\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"LLB\", \"symbols\": [\"LLB$string$1\"], \"postprocess\": () => ({ type: 'List', earlier: true })},\n    {\"name\": \"RSB\", \"symbols\": [{\"literal\":\"]\"}], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.nothing},\n    {\"name\": \"RSB$string$1\", \"symbols\": [{\"literal\":\".\"}, {\"literal\":\".\"}, {\"literal\":\"]\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"RSB\", \"symbols\": [\"RSB$string$1\"], \"postprocess\": () => ({ later: true })},\n    {\"name\": \"RLB\", \"symbols\": [{\"literal\":\"}\"}], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.nothing},\n    {\"name\": \"RLB$string$1\", \"symbols\": [{\"literal\":\".\"}, {\"literal\":\".\"}, {\"literal\":\"}\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"RLB\", \"symbols\": [\"RLB$string$1\"], \"postprocess\": () => ({ later: true })},\n    {\"name\": \"OL\", \"symbols\": [\"LI\"], \"postprocess\": data => [data[0]]},\n    {\"name\": \"OL\", \"symbols\": [\"OL\", \"_\", {\"literal\":\",\"}, \"_\", \"LI\"], \"postprocess\": data => [...data[0], data[4]]},\n    {\"name\": \"LI\", \"symbols\": [\"date\"], \"postprocess\": id},\n    {\"name\": \"LI\", \"symbols\": [\"ua_date\"], \"postprocess\": id},\n    {\"name\": \"LI\", \"symbols\": [\"L2X\"], \"postprocess\": id},\n    {\"name\": \"LI\", \"symbols\": [\"consecutives\"], \"postprocess\": id},\n    {\"name\": \"consecutives$string$1\", \"symbols\": [{\"literal\":\".\"}, {\"literal\":\".\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"consecutives\", \"symbols\": [\"year_month_day\", \"consecutives$string$1\", \"year_month_day\"], \"postprocess\": d => [(0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)(d[0]), (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)(d[2])]},\n    {\"name\": \"consecutives$string$2\", \"symbols\": [{\"literal\":\".\"}, {\"literal\":\".\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"consecutives\", \"symbols\": [\"year_month\", \"consecutives$string$2\", \"year_month\"], \"postprocess\": d => [(0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)(d[0]), (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)(d[2])]},\n    {\"name\": \"consecutives$string$3\", \"symbols\": [{\"literal\":\".\"}, {\"literal\":\".\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"consecutives\", \"symbols\": [\"year\", \"consecutives$string$3\", \"year\"], \"postprocess\": d => [(0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)([d[0]]), (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.date)([d[2]])]},\n    {\"name\": \"L3\", \"symbols\": [\"L3i\"], \"postprocess\": id},\n    {\"name\": \"L3i\", \"symbols\": [\"L3S\", {\"literal\":\"/\"}, \"L3S\"], \"postprocess\": (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.interval)(3)},\n    {\"name\": \"L3S\", \"symbols\": [\"L1S\"], \"postprocess\": id},\n    {\"name\": \"L3S\", \"symbols\": [\"L2S\"], \"postprocess\": id},\n    {\"name\": \"digit\", \"symbols\": [\"positive_digit\"], \"postprocess\": id},\n    {\"name\": \"digit\", \"symbols\": [{\"literal\":\"0\"}], \"postprocess\": id},\n    {\"name\": \"digits\", \"symbols\": [\"digit\"], \"postprocess\": id},\n    {\"name\": \"digits\", \"symbols\": [\"digits\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"nd4\", \"symbols\": [\"d4\"]},\n    {\"name\": \"nd4\", \"symbols\": [{\"literal\":\"-\"}, \"d4\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"nd3\", \"symbols\": [\"d3\"]},\n    {\"name\": \"nd3\", \"symbols\": [{\"literal\":\"-\"}, \"d3\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"nd2\", \"symbols\": [\"d2\"]},\n    {\"name\": \"nd2\", \"symbols\": [{\"literal\":\"-\"}, \"d2\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d4\", \"symbols\": [\"d2\", \"d2\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d3\", \"symbols\": [\"d2\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d2\", \"symbols\": [\"digit\", \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d5+\", \"symbols\": [\"positive_digit\", \"d3\", \"digits\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.num},\n    {\"name\": \"d1x\", \"symbols\": [/[1-9X]/], \"postprocess\": id},\n    {\"name\": \"dx\", \"symbols\": [\"d1x\"], \"postprocess\": id},\n    {\"name\": \"dx\", \"symbols\": [{\"literal\":\"0\"}], \"postprocess\": id},\n    {\"name\": \"dx2\", \"symbols\": [\"dx\", \"dx\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"dx4\", \"symbols\": [\"dx2\", \"dx2\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"dx4\", \"symbols\": [{\"literal\":\"-\"}, \"dx2\", \"dx2\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"md\", \"symbols\": [\"m31\"], \"postprocess\": id},\n    {\"name\": \"md\", \"symbols\": [\"m30\"], \"postprocess\": id},\n    {\"name\": \"md$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"2\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"md\", \"symbols\": [\"md$string$1\"], \"postprocess\": id},\n    {\"name\": \"mx\", \"symbols\": [{\"literal\":\"0\"}, \"d1x\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"mx\", \"symbols\": [/[1X]/, /[012X]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"m31x\", \"symbols\": [/[0X]/, /[13578X]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"m31x\", \"symbols\": [/[1X]/, /[02]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"m31x$string$1\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"X\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31x\", \"symbols\": [\"m31x$string$1\"], \"postprocess\": id},\n    {\"name\": \"m30x\", \"symbols\": [/[0X]/, /[469]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"m30x$string$1\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"1\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m30x\", \"symbols\": [\"m30x$string$1\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d29x\", \"symbols\": [{\"literal\":\"0\"}, \"d1x\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d29x\", \"symbols\": [/[1-2X]/, \"dx\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d30x\", \"symbols\": [\"d29x\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d30x$string$1\", \"symbols\": [{\"literal\":\"3\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d30x\", \"symbols\": [\"d30x$string$1\"], \"postprocess\": id},\n    {\"name\": \"d31x\", \"symbols\": [\"d30x\"], \"postprocess\": id},\n    {\"name\": \"d31x\", \"symbols\": [{\"literal\":\"3\"}, /[1X]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"positive_digit\", \"symbols\": [/[1-9]/], \"postprocess\": id},\n    {\"name\": \"m31$subexpression$1$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"1\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31$subexpression$1\", \"symbols\": [\"m31$subexpression$1$string$1\"]},\n    {\"name\": \"m31$subexpression$1$string$2\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"3\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31$subexpression$1\", \"symbols\": [\"m31$subexpression$1$string$2\"]},\n    {\"name\": \"m31$subexpression$1$string$3\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"5\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31$subexpression$1\", \"symbols\": [\"m31$subexpression$1$string$3\"]},\n    {\"name\": \"m31$subexpression$1$string$4\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"7\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31$subexpression$1\", \"symbols\": [\"m31$subexpression$1$string$4\"]},\n    {\"name\": \"m31$subexpression$1$string$5\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"8\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31$subexpression$1\", \"symbols\": [\"m31$subexpression$1$string$5\"]},\n    {\"name\": \"m31$subexpression$1$string$6\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31$subexpression$1\", \"symbols\": [\"m31$subexpression$1$string$6\"]},\n    {\"name\": \"m31$subexpression$1$string$7\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"2\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m31$subexpression$1\", \"symbols\": [\"m31$subexpression$1$string$7\"]},\n    {\"name\": \"m31\", \"symbols\": [\"m31$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"m30$subexpression$1$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"4\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m30$subexpression$1\", \"symbols\": [\"m30$subexpression$1$string$1\"]},\n    {\"name\": \"m30$subexpression$1$string$2\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"6\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m30$subexpression$1\", \"symbols\": [\"m30$subexpression$1$string$2\"]},\n    {\"name\": \"m30$subexpression$1$string$3\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"9\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m30$subexpression$1\", \"symbols\": [\"m30$subexpression$1$string$3\"]},\n    {\"name\": \"m30$subexpression$1$string$4\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"1\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"m30$subexpression$1\", \"symbols\": [\"m30$subexpression$1$string$4\"]},\n    {\"name\": \"m30\", \"symbols\": [\"m30$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"d01_11\", \"symbols\": [{\"literal\":\"0\"}, \"positive_digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d01_11\", \"symbols\": [{\"literal\":\"1\"}, /[0-1]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d01_12\", \"symbols\": [\"d01_11\"], \"postprocess\": id},\n    {\"name\": \"d01_12$string$1\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"2\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d01_12\", \"symbols\": [\"d01_12$string$1\"], \"postprocess\": id},\n    {\"name\": \"d01_13\", \"symbols\": [\"d01_12\"], \"postprocess\": id},\n    {\"name\": \"d01_13$string$1\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"3\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d01_13\", \"symbols\": [\"d01_13$string$1\"], \"postprocess\": id},\n    {\"name\": \"d00_14$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d00_14\", \"symbols\": [\"d00_14$string$1\"], \"postprocess\": id},\n    {\"name\": \"d00_14\", \"symbols\": [\"d01_13\"], \"postprocess\": id},\n    {\"name\": \"d00_14$string$2\", \"symbols\": [{\"literal\":\"1\"}, {\"literal\":\"4\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d00_14\", \"symbols\": [\"d00_14$string$2\"], \"postprocess\": id},\n    {\"name\": \"d00_23$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d00_23\", \"symbols\": [\"d00_23$string$1\"], \"postprocess\": id},\n    {\"name\": \"d00_23\", \"symbols\": [\"d01_23\"], \"postprocess\": id},\n    {\"name\": \"d01_23\", \"symbols\": [{\"literal\":\"0\"}, \"positive_digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d01_23\", \"symbols\": [{\"literal\":\"1\"}, \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d01_23\", \"symbols\": [{\"literal\":\"2\"}, /[0-3]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d01_29\", \"symbols\": [{\"literal\":\"0\"}, \"positive_digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d01_29\", \"symbols\": [/[1-2]/, \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d01_30\", \"symbols\": [\"d01_29\"], \"postprocess\": id},\n    {\"name\": \"d01_30$string$1\", \"symbols\": [{\"literal\":\"3\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d01_30\", \"symbols\": [\"d01_30$string$1\"], \"postprocess\": id},\n    {\"name\": \"d01_31\", \"symbols\": [\"d01_30\"], \"postprocess\": id},\n    {\"name\": \"d01_31$string$1\", \"symbols\": [{\"literal\":\"3\"}, {\"literal\":\"1\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d01_31\", \"symbols\": [\"d01_31$string$1\"], \"postprocess\": id},\n    {\"name\": \"d00_59$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"0\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"d00_59\", \"symbols\": [\"d00_59$string$1\"], \"postprocess\": id},\n    {\"name\": \"d00_59\", \"symbols\": [\"d01_59\"], \"postprocess\": id},\n    {\"name\": \"d01_59\", \"symbols\": [\"d01_29\"], \"postprocess\": id},\n    {\"name\": \"d01_59\", \"symbols\": [/[345]/, \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d21_24\", \"symbols\": [{\"literal\":\"2\"}, /[1-4]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d25_41\", \"symbols\": [{\"literal\":\"2\"}, /[5-9]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d25_41\", \"symbols\": [{\"literal\":\"3\"}, \"digit\"], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"d25_41\", \"symbols\": [{\"literal\":\"4\"}, /[01]/], \"postprocess\": _util_js__WEBPACK_IMPORTED_MODULE_0__.join},\n    {\"name\": \"_$ebnf$1\", \"symbols\": []},\n    {\"name\": \"_$ebnf$1\", \"symbols\": [\"_$ebnf$1\", {\"literal\":\" \"}], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"_\", \"symbols\": [\"_$ebnf$1\"]}\n];\nlet ParserStart = \"edtf\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ Lexer, ParserRules, ParserStart });\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/grammar.js?");

/***/ }),

/***/ "./node_modules/edtf/src/interface.js":
/*!********************************************!*\
  !*** ./node_modules/edtf/src/interface.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtDateTime: () => (/* binding */ ExtDateTime)\n/* harmony export */ });\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser.js */ \"./node_modules/edtf/src/parser.js\");\n\n\nclass ExtDateTime {\n\n  static get type() {\n    return this.name\n  }\n\n  static parse(input) {\n    return (0,_parser_js__WEBPACK_IMPORTED_MODULE_0__.parse)(input, { types: [this.type] })\n  }\n\n  static from(input) {\n    return (input instanceof this) ? input : new this(input)\n  }\n\n  static UTC(...args) {\n    let time = Date.UTC(...args)\n\n    // ECMA Date constructor converts 0-99 to 1900-1999!\n    if (args[0] >= 0 && args[0] < 100)\n      time = adj(new Date(time))\n\n    return time\n  }\n\n  get type() {\n    return this.constructor.type\n  }\n\n  get edtf() {\n    return this.toEDTF()\n  }\n\n  get isEDTF() {\n    return true\n  }\n\n  toJSON() {\n    return this.toEDTF()\n  }\n\n  toString() {\n    return this.toEDTF()\n  }\n\n  toLocaleString(...args) {\n    return this.localize(...args)\n  }\n\n  inspect() {\n    return this.toEDTF()\n  }\n\n  valueOf() {\n    return this.min\n  }\n\n  [Symbol.toPrimitive](hint) {\n    return (hint === 'number') ? this.valueOf() : this.toEDTF()\n  }\n\n\n  covers(other) {\n    return (this.min <= other.min) && (this.max >= other.max)\n  }\n\n  compare(other) {\n    if (other.min == null || other.max == null) return null\n\n    let [a, x, b, y] = [this.min, this.max, other.min, other.max]\n\n    if (a !== b)\n      return a < b ? -1 : 1\n\n    if (x !== y)\n      return x < y ? -1 : 1\n\n    return 0\n  }\n\n  includes(other) {\n    let covered = this.covers(other)\n    if (!covered || !this[Symbol.iterator]) return covered\n\n    for (let cur of this) {\n      if (cur.edtf === other.edtf) return true\n    }\n\n    return false\n  }\n\n  *until(then) {\n    yield this\n    if (this.compare(then)) yield* this.between(then)\n  }\n\n  *through(then) {\n    yield* this.until(then)\n    if (this.compare(then)) yield then\n  }\n\n  *between(then) {\n    then = this.constructor.from(then)\n\n    let cur = this\n    let dir = this.compare(then)\n\n    if (!dir) return\n\n    for (;;) {\n      cur = cur.next(-dir)\n      if (cur.compare(then) !== dir) break\n      yield cur\n    }\n  }\n}\n\nfunction adj(date, by = 1900) {\n  date.setUTCFullYear(date.getUTCFullYear() - by)\n  return date.getTime()\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/interface.js?");

/***/ }),

/***/ "./node_modules/edtf/src/interval.js":
/*!*******************************************!*\
  !*** ./node_modules/edtf/src/interval.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Interval: () => (/* binding */ Interval)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/edtf/src/assert.js\");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date.js */ \"./node_modules/edtf/src/date.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface.js */ \"./node_modules/edtf/src/interface.js\");\n/* harmony import */ var _season_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./season.js */ \"./node_modules/edtf/src/season.js\");\n\n\n\n\n\nconst V = new WeakMap()\n\n\nclass Interval extends _interface_js__WEBPACK_IMPORTED_MODULE_2__.ExtDateTime {\n  constructor(...args) {\n    super()\n\n    V.set(this, [null, null])\n\n    switch (args.length) {\n    case 2:\n      this.lower = args[0]\n      this.upper = args[1]\n      break\n\n    case 1:\n      switch (typeof args[0]) {\n      case 'string':\n        args[0] = Interval.parse(args[0])\n\n      // eslint-disable-next-line no-fallthrough\n      case 'object':\n        if (Array.isArray(args[0]))\n          args[0] = { values: args[0] }\n\n        {\n          let [obj] = args\n\n          ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj !== null)\n          if (obj.type) _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal('Interval', obj.type)\n\n          ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj.values)\n          ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj.values.length < 3)\n\n          this.lower = obj.values[0]\n          this.upper = obj.values[1]\n\n          this.earlier = obj.earlier\n          this.later = obj.later\n        }\n        break\n\n      default:\n        this.lower = args[0]\n      }\n      break\n\n    case 0:\n      break\n\n    default:\n      throw new RangeError(`invalid interval value: ${args}`)\n    }\n  }\n\n  get lower() {\n    return this.values[0]\n  }\n\n  set lower(value) {\n    if (value == null)\n      return this.values[0] = null\n\n    if (value === Infinity || value === -Infinity)\n      return this.values[0] = Infinity\n\n    value = getDateOrSeasonFrom(value)\n\n    if (value >= this.upper && this.upper != null)\n      throw new RangeError(`invalid lower bound: ${value}`)\n\n    this.values[0] = value\n  }\n\n  get upper() {\n    return this.values[1]\n  }\n\n  set upper(value) {\n    if (value == null)\n      return this.values[1] = null\n\n    if (value === Infinity)\n      return this.values[1] = Infinity\n\n    value = getDateOrSeasonFrom(value)\n\n    if (this.lower !== null && this.lower !== Infinity && value <= this.lower)\n      throw new RangeError(`invalid upper bound: ${value}`)\n\n    this.values[1] =  value\n  }\n\n  get finite() {\n    return (this.lower != null && this.lower !== Infinity) &&\n      (this.upper != null && this.upper !== Infinity)\n  }\n\n  *[Symbol.iterator]() {\n    if (!this.finite) throw Error('cannot iterate infinite interval')\n    yield* this.lower.through(this.upper)\n  }\n\n  get values() {\n    return V.get(this)\n  }\n\n  get min() {\n    let v = this.lower\n    return !v ? null : (v === Infinity) ? -Infinity : v.min\n  }\n\n  get max() {\n    let v = this.upper\n    return !v ? null : (v === Infinity) ? Infinity : v.max\n  }\n\n  toEDTF() {\n    return this.values\n      .map(v => {\n        if (v === Infinity) return '..'\n        if (!v) return ''\n        return v.edtf\n      })\n      .join('/')\n  }\n}\n\nfunction getDateOrSeasonFrom(value) {\n  try {\n    return _date_js__WEBPACK_IMPORTED_MODULE_1__.Date.from(value)\n  } catch (de) {\n    return _season_js__WEBPACK_IMPORTED_MODULE_3__.Season.from(value)\n  }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/interval.js?");

/***/ }),

/***/ "./node_modules/edtf/src/list.js":
/*!***************************************!*\
  !*** ./node_modules/edtf/src/list.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   List: () => (/* binding */ List)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/edtf/src/assert.js\");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date.js */ \"./node_modules/edtf/src/date.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface.js */ \"./node_modules/edtf/src/interface.js\");\n\n\n\n\nconst { isArray } = Array\nconst V = new WeakMap()\n\n\nclass List extends _interface_js__WEBPACK_IMPORTED_MODULE_2__.ExtDateTime {\n  constructor(...args) {\n    super()\n\n    V.set(this, [])\n\n    if (args.length > 1) args = [args]\n\n    if (args.length) {\n      switch (typeof args[0]) {\n      case 'string':\n        args[0] = new.target.parse(args[0])\n\n      // eslint-disable-next-line no-fallthrough\n      case 'object':\n        if (isArray(args[0]))\n          args[0] = { values: args[0] }\n\n        {\n          let [obj] = args\n\n          ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj !== null)\n          if (obj.type) _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal(this.type, obj.type)\n\n          ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj.values)\n          this.concat(...obj.values)\n\n          this.earlier = !!obj.earlier\n          this.later = !!obj.later\n        }\n        break\n\n      default:\n        throw new RangeError(`invalid ${this.type} value: ${args}`)\n      }\n    }\n  }\n\n  get values() {\n    return V.get(this)\n  }\n\n  get length() {\n    return this.values.length\n  }\n\n  get empty() {\n    return this.length === 0\n  }\n\n  get first() {\n    let value = this.values[0]\n    return isArray(value) ? value[0] : value\n  }\n\n  get last() {\n    let value = this.values[this.length - 1]\n    return isArray(value) ? value[0] : value\n  }\n\n  clear() {\n    return (this.values.length = 0), this\n  }\n\n  concat(...args) {\n    for (let value of args) this.push(value)\n    return this\n  }\n\n  push(value) {\n    if (isArray(value)) {\n      _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal(2, value.length)\n      return this.values.push(value.map(v => _date_js__WEBPACK_IMPORTED_MODULE_1__.Date.from(v)))\n    }\n\n    return this.values.push(_date_js__WEBPACK_IMPORTED_MODULE_1__.Date.from(value))\n  }\n\n  *[Symbol.iterator]() {\n    for (let value of this.values) {\n      if (isArray(value))\n        yield* value[0].through(value[1])\n      else\n        yield value\n    }\n  }\n\n  get min() {\n    return this.earlier ? -Infinity : (this.empty ? 0 : this.first.min)\n  }\n\n  get max() {\n    return this.later ? Infinity : (this.empty ? 0 : this.last.max)\n  }\n\n  content() {\n    return this\n      .values\n      .map(v => isArray(v) ? v.map(d => d.edtf).join('..') : v.edtf)\n      .join(',')\n  }\n\n  toEDTF() {\n    return this.wrap(this.empty ?\n      '' :\n      `${this.earlier ? '..' : ''}${this.content()}${this.later ? '..' : ''}`\n    )\n  }\n\n  wrap(content) {\n    return `{${content}}`\n  }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/list.js?");

/***/ }),

/***/ "./node_modules/edtf/src/mixin.js":
/*!****************************************!*\
  !*** ./node_modules/edtf/src/mixin.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mixin: () => (/* binding */ mixin)\n/* harmony export */ });\nconst keys = Reflect.ownKeys.bind(Reflect)\nconst descriptor = Object.getOwnPropertyDescriptor.bind(Object)\nconst define = Object.defineProperty.bind(Object)\nconst has = Object.prototype.hasOwnProperty\n\nfunction mixin(target, ...mixins) {\n  for (let source of mixins) {\n    inherit(target, source)\n    inherit(target.prototype, source.prototype)\n  }\n\n  return target\n}\n\nfunction inherit(target, source) {\n  for (let key of keys(source)) {\n    if (!has.call(target, key)) {\n      define(target, key, descriptor(source, key))\n    }\n  }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/mixin.js?");

/***/ }),

/***/ "./node_modules/edtf/src/parser.js":
/*!*****************************************!*\
  !*** ./node_modules/edtf/src/parser.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaults: () => (/* binding */ defaults),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parser: () => (/* binding */ parser)\n/* harmony export */ });\n/* harmony import */ var nearley__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nearley */ \"./node_modules/nearley/lib/nearley.js\");\n/* harmony import */ var _grammar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grammar.js */ \"./node_modules/edtf/src/grammar.js\");\n\n\n\nconst defaults = {\n  level: 2,\n  types: [],\n  seasonIntervals: false\n}\n\nfunction byLevel(a, b) {\n  return a.level < b.level ? -1 : a.level > b.level ? 1 : 0\n}\n\nfunction limit(results, constraints = {}) {\n  if (!results.length) return results\n\n  let {\n    level,\n    types,\n    seasonIntervals\n  } = { ...defaults, ...constraints }\n\n\n  return results.filter(res => {\n    if (seasonIntervals && isSeasonInterval(res))\n      return true\n\n    if (res.level > level)\n      return false\n    if (types.length && !types.includes(res.type))\n      return false\n\n    return true\n  })\n}\n\nfunction isSeasonInterval({ type, values }) {\n  return type === 'Interval' && values[0].type === 'Season'\n}\n\nfunction best(results) {\n  if (results.length < 2) return results[0]\n\n  // If there are multiple results, pick the first\n  // one on the lowest level!\n  return results.sort(byLevel)[0]\n}\n\nfunction parse(input, constraints = {}) {\n  try {\n    let nep = parser()\n    let res = best(limit(nep.feed(input).results, constraints))\n\n    if (!res) throw new Error('edtf: No possible parsings (@EOS)')\n\n    return res\n\n  } catch (error) {\n    error.message += ` for \"${input}\"`\n    throw error\n  }\n}\n\nfunction parser() {\n  return new nearley__WEBPACK_IMPORTED_MODULE_0__.Parser(_grammar_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ParserRules, _grammar_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ParserStart)\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/parser.js?");

/***/ }),

/***/ "./node_modules/edtf/src/season.js":
/*!*****************************************!*\
  !*** ./node_modules/edtf/src/season.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Season: () => (/* binding */ Season)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/edtf/src/assert.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interface.js */ \"./node_modules/edtf/src/interface.js\");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date.js */ \"./node_modules/edtf/src/date.js\");\n\n\n\n\nconst V = new WeakMap()\n\nclass Season extends _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime {\n  constructor(input) {\n    super()\n\n    V.set(this, [])\n\n    switch (typeof input) {\n    case 'number':\n      this.year = input\n      this.season = arguments[1] || 21\n      break\n\n    case 'string':\n      input = Season.parse(input)\n\n    // eslint-disable-next-line no-fallthrough\n    case 'object':\n      if (Array.isArray(input))\n        input = { values: input }\n\n      {\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input !== null)\n        if (input.type) _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal('Season', input.type)\n\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input.values)\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal(2, input.values.length)\n\n        this.year = input.values[0]\n        this.season = input.values[1]\n      }\n      break\n\n    case 'undefined':\n      this.year = new Date().getUTCFullYear()\n      this.season = 21\n      break\n\n    default:\n      throw new RangeError('Invalid season value')\n    }\n  }\n\n  get year() {\n    return this.values[0]\n  }\n\n  set year(year) {\n    this.values[0] = Number(year)\n  }\n\n  get season() {\n    return this.values[1]\n  }\n\n  set season(season) {\n    this.values[1] = validate(Number(season))\n  }\n\n  get values() {\n    return V.get(this)\n  }\n\n  next(k = 1) {\n    let { season, year } = this\n\n    switch (true) {\n    case (season >= 21 && season <= 36):\n      [year, season] = inc(year, season, k, season - (season - 21) % 4, 4)\n      break\n    case (season >= 37 && season <= 39):\n      [year, season] = inc(year, season, k, 37, 3)\n      break\n    case (season >= 40 && season <= 41):\n      [year, season] = inc(year, season, k, 40, 2)\n      break\n    default:\n      throw new RangeError(`Cannot compute next/prev for season ${season}`)\n    }\n\n    return new Season(year, season)\n  }\n\n  prev(k = 1) {\n    return this.next(-k)\n  }\n\n  get min() { // eslint-disable-line complexity\n    switch (this.season) {\n    case 21:\n    case 25:\n    case 32:\n    case 33:\n    case 40:\n    case 37:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 0)\n\n    case 22:\n    case 26:\n    case 31:\n    case 34:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 3)\n\n    case 23:\n    case 27:\n    case 30:\n    case 35:\n    case 41:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 6)\n\n    case 24:\n    case 28:\n    case 29:\n    case 36:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 9)\n\n    case 38:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 4)\n\n    case 39:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 8)\n\n    default:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 0)\n    }\n  }\n\n  get max() { // eslint-disable-line complexity\n    switch (this.season) {\n    case 21:\n    case 25:\n    case 32:\n    case 33:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 3) - 1\n\n    case 22:\n    case 26:\n    case 31:\n    case 34:\n    case 40:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 6) - 1\n\n    case 23:\n    case 27:\n    case 30:\n    case 35:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 9) - 1\n\n    case 24:\n    case 28:\n    case 29:\n    case 36:\n    case 41:\n    case 39:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year + 1, 0) - 1\n\n    case 37:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 5) - 1\n\n    case 38:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 9) - 1\n\n    default:\n      return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year + 1, 0) - 1\n    }\n  }\n\n  toEDTF() {\n    return `${this.year < 0 ? '-' : ''}${(0,_date_js__WEBPACK_IMPORTED_MODULE_2__.pad)(this.year)}-${this.season}`\n  }\n}\n\nfunction validate(season) {\n  if (isNaN(season) || season < 21 || season === Infinity)\n    throw new RangeError(`invalid division of year: ${season}`)\n  return season\n}\n\nfunction inc(year, season, by, base, size) {\n  const m = (season + by) - base\n\n  return [\n    year + Math.floor(m / size),\n    validate(base + (m % size + size) % size)\n  ]\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/season.js?");

/***/ }),

/***/ "./node_modules/edtf/src/set.js":
/*!**************************************!*\
  !*** ./node_modules/edtf/src/set.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Set: () => (/* binding */ Set)\n/* harmony export */ });\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./list.js */ \"./node_modules/edtf/src/list.js\");\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser.js */ \"./node_modules/edtf/src/parser.js\");\n\n\n\nclass Set extends _list_js__WEBPACK_IMPORTED_MODULE_0__.List {\n  static parse(input) {\n    return (0,_parser_js__WEBPACK_IMPORTED_MODULE_1__.parse)(input, { types: ['Set'] })\n  }\n\n  get type() {\n    return 'Set'\n  }\n\n  wrap(content) {\n    return `[${content}]`\n  }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/set.js?");

/***/ }),

/***/ "./node_modules/edtf/src/types.js":
/*!****************************************!*\
  !*** ./node_modules/edtf/src/types.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Century: () => (/* reexport safe */ _century_js__WEBPACK_IMPORTED_MODULE_3__.Century),\n/* harmony export */   Date: () => (/* reexport safe */ _date_js__WEBPACK_IMPORTED_MODULE_0__.Date),\n/* harmony export */   Decade: () => (/* reexport safe */ _decade_js__WEBPACK_IMPORTED_MODULE_2__.Decade),\n/* harmony export */   Interval: () => (/* reexport safe */ _interval_js__WEBPACK_IMPORTED_MODULE_5__.Interval),\n/* harmony export */   List: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_6__.List),\n/* harmony export */   Season: () => (/* reexport safe */ _season_js__WEBPACK_IMPORTED_MODULE_4__.Season),\n/* harmony export */   Set: () => (/* reexport safe */ _set_js__WEBPACK_IMPORTED_MODULE_7__.Set),\n/* harmony export */   Year: () => (/* reexport safe */ _year_js__WEBPACK_IMPORTED_MODULE_1__.Year)\n/* harmony export */ });\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date.js */ \"./node_modules/edtf/src/date.js\");\n/* harmony import */ var _year_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./year.js */ \"./node_modules/edtf/src/year.js\");\n/* harmony import */ var _decade_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decade.js */ \"./node_modules/edtf/src/decade.js\");\n/* harmony import */ var _century_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./century.js */ \"./node_modules/edtf/src/century.js\");\n/* harmony import */ var _season_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./season.js */ \"./node_modules/edtf/src/season.js\");\n/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interval.js */ \"./node_modules/edtf/src/interval.js\");\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./list.js */ \"./node_modules/edtf/src/list.js\");\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./set.js */ \"./node_modules/edtf/src/set.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/types.js?");

/***/ }),

/***/ "./node_modules/edtf/src/util.js":
/*!***************************************!*\
  !*** ./node_modules/edtf/src/util.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   century: () => (/* binding */ century),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   date: () => (/* binding */ date),\n/* harmony export */   datetime: () => (/* binding */ datetime),\n/* harmony export */   decade: () => (/* binding */ decade),\n/* harmony export */   interval: () => (/* binding */ interval),\n/* harmony export */   join: () => (/* binding */ join),\n/* harmony export */   list: () => (/* binding */ list),\n/* harmony export */   masked: () => (/* binding */ masked),\n/* harmony export */   merge: () => (/* binding */ merge),\n/* harmony export */   nothing: () => (/* binding */ nothing),\n/* harmony export */   num: () => (/* binding */ num),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   pluck: () => (/* binding */ pluck),\n/* harmony export */   qualify: () => (/* binding */ qualify),\n/* harmony export */   season: () => (/* binding */ season),\n/* harmony export */   year: () => (/* binding */ year),\n/* harmony export */   zero: () => (/* binding */ zero)\n/* harmony export */ });\n/* harmony import */ var _bitmask_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bitmask.js */ \"./node_modules/edtf/src/bitmask.js\");\n\nconst { assign } = Object\n\n\nfunction num(data) {\n  return Number(Array.isArray(data) ? data.join('') : data)\n}\n\nfunction join(data) {\n  return data.join('')\n}\n\nfunction zero() { return 0 }\n\nfunction nothing() { return null }\n\nfunction pick(...args) {\n  return args.length === 1 ?\n    data => data[args[0]] :\n    data => concat(data, args)\n}\n\nfunction pluck(...args) {\n  return data => args.map(i => data[i])\n}\n\nfunction concat(data, idx = data.keys()) {\n  return Array.from(idx)\n    .reduce((memo, i) => data[i] !== null ? memo.concat(data[i]) : memo, [])\n}\n\nfunction merge(...args) {\n  if (typeof args[args.length - 1] === 'object')\n    var extra = args.pop()\n\n  return data => assign(args.reduce((a, i) => assign(a, data[i]), {}), extra)\n}\n\nfunction interval(level) {\n  return data => ({\n    values: [data[0], data[2]],\n    type: 'Interval',\n    level\n  })\n}\n\nfunction masked(type = 'unspecified', symbol = 'X') {\n  return (data, _, reject) => {\n    data = data.join('')\n\n    let negative = data.startsWith('-')\n    let mask = data.replace(/-/g, '')\n\n    if (mask.indexOf(symbol) === -1) return reject\n\n    let values = _bitmask_js__WEBPACK_IMPORTED_MODULE_0__.Bitmask.values(mask, 0)\n\n    if (negative) values[0] = -values[0]\n\n    return {\n      values, [type]: _bitmask_js__WEBPACK_IMPORTED_MODULE_0__.Bitmask.compute(mask)\n    }\n  }\n}\n\nfunction date(values, level = 0, extra = null) {\n  return assign({\n    type: 'Date',\n    level,\n    values: _bitmask_js__WEBPACK_IMPORTED_MODULE_0__.Bitmask.normalize(values.map(Number))\n  }, extra)\n}\n\nfunction year(values, level = 1, extra = null) {\n  return assign({\n    type: 'Year',\n    level,\n    values: values.map(Number)\n  }, extra)\n}\n\nfunction century(value, level = 0) {\n  return {\n    type: 'Century',\n    level,\n    values: [value]\n  }\n}\n\nfunction decade(value, level = 2) {\n  return {\n    type: 'Decade',\n    level,\n    values: [value]\n  }\n}\n\nfunction datetime(data) {\n  let offset = data[3]\n  if (offset == null) offset = new Date().getTimezoneOffset()\n\n  return {\n    values: _bitmask_js__WEBPACK_IMPORTED_MODULE_0__.Bitmask.normalize(data[0].map(Number)).concat(data[2]),\n    offset,\n    type: 'Date',\n    level: 0\n  }\n}\n\nfunction season(data, level = 1) {\n  return {\n    type: 'Season',\n    level,\n    values: [Number(data[0]), Number(data[2])]\n  }\n}\n\nfunction list(data) {\n  return assign({ values: data[1], level: 2 }, data[0], data[2])\n}\n\nfunction qualify([parts], _, reject) {\n  let q = {\n    uncertain: new _bitmask_js__WEBPACK_IMPORTED_MODULE_0__.Bitmask(), approximate: new _bitmask_js__WEBPACK_IMPORTED_MODULE_0__.Bitmask()\n  }\n\n  let values = parts\n    .map(([lhs, part, rhs], idx) => {\n      for (let ua in lhs) q[ua].qualify(idx * 2)\n      for (let ua in rhs) q[ua].qualify(1 + idx * 2)\n      return part\n    })\n\n  return (!q.uncertain.value && !q.approximate.value) ?\n    reject : {\n      ...date(values, 2),\n      uncertain: q.uncertain.value,\n      approximate: q.approximate.value\n    }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/util.js?");

/***/ }),

/***/ "./node_modules/edtf/src/year.js":
/*!***************************************!*\
  !*** ./node_modules/edtf/src/year.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Year: () => (/* binding */ Year)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/edtf/src/assert.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interface.js */ \"./node_modules/edtf/src/interface.js\");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date.js */ \"./node_modules/edtf/src/date.js\");\n\n\n\n\nconst { abs } = Math\n\nconst V = new WeakMap()\nconst S = new WeakMap()\n\nclass Year extends _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime {\n  constructor(input) {\n    super()\n\n    V.set(this, [])\n\n    switch (typeof input) {\n    case 'number':\n      this.year = input\n      break\n\n    case 'string':\n      input = Year.parse(input)\n\n    // eslint-disable-next-line no-fallthrough\n    case 'object':\n      if (Array.isArray(input))\n        input = { values: input }\n\n      {\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input !== null)\n        if (input.type) _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal('Year', input.type)\n\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input.values)\n        ;(0,_assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input.values.length)\n\n        this.year = input.values[0]\n        this.significant = input.significant\n      }\n      break\n\n    case 'undefined':\n      this.year = new Date().getUTCFullYear()\n      break\n\n    default:\n      throw new RangeError('Invalid year value')\n    }\n  }\n\n  get year() {\n    return this.values[0]\n  }\n\n  set year(year) {\n    this.values[0] = Number(year)\n  }\n\n  get significant() {\n    return S.get(this)\n  }\n\n  set significant(digits) {\n    S.set(this, Number(digits))\n  }\n\n  get values() {\n    return V.get(this)\n  }\n\n  get min() {\n    return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year, 0)\n  }\n\n  get max() {\n    return _interface_js__WEBPACK_IMPORTED_MODULE_1__.ExtDateTime.UTC(this.year + 1, 0) - 1\n  }\n\n  toEDTF() {\n    let y = abs(this.year)\n    let s = this.significant ? `S${this.significant}` : ''\n\n    if (y <= 9999) return `${this.year < 0 ? '-' : ''}${(0,_date_js__WEBPACK_IMPORTED_MODULE_2__.pad)(this.year)}${s}`\n\n    // TODO exponential form for ending zeroes\n\n    return `Y${this.year}${s}`\n  }\n}\n\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/src/year.js?");

/***/ }),

/***/ "./node_modules/edtf/locale-data/de-DE.json":
/*!**************************************************!*\
  !*** ./node_modules/edtf/locale-data/de-DE.json ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"locale\":\"de-DE\",\"date\":{\"approximate\":{\"long\":\"circa %D\",\"medium\":\"ca. %D\",\"short\":\"ca. %D\"},\"uncertain\":{\"long\":\"%D (?)\",\"medium\":\"%D (?)\",\"short\":\"%D (?)\"}}}');\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/locale-data/de-DE.json?");

/***/ }),

/***/ "./node_modules/edtf/locale-data/en-US.json":
/*!**************************************************!*\
  !*** ./node_modules/edtf/locale-data/en-US.json ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"locale\":\"en-US\",\"date\":{\"approximate\":{\"long\":\"circa %D\",\"medium\":\"ca. %D\",\"short\":\"c. %D\"},\"uncertain\":{\"long\":\"%D (unspecified)\",\"medium\":\"%D (?)\",\"short\":\"%D (?)\"}}}');\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/locale-data/en-US.json?");

/***/ }),

/***/ "./node_modules/edtf/locale-data/es-ES.json":
/*!**************************************************!*\
  !*** ./node_modules/edtf/locale-data/es-ES.json ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"locale\":\"es-ES\",\"date\":{\"approximate\":{\"long\":\"circa %D\",\"medium\":\"ca. %D\",\"short\":\"c. %D\"},\"uncertain\":{\"long\":\"%D (?)\",\"medium\":\"%D (?)\",\"short\":\"%D (?)\"}}}');\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/locale-data/es-ES.json?");

/***/ }),

/***/ "./node_modules/edtf/locale-data/fr-FR.json":
/*!**************************************************!*\
  !*** ./node_modules/edtf/locale-data/fr-FR.json ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"locale\":\"fr-FR\",\"date\":{\"approximate\":{\"long\":\"circa %D\",\"medium\":\"ca. %D\",\"short\":\"c. %D\"},\"uncertain\":{\"long\":\"%D (?)\",\"medium\":\"%D (?)\",\"short\":\"%D (?)\"}}}');\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/locale-data/fr-FR.json?");

/***/ }),

/***/ "./node_modules/edtf/locale-data/it-IT.json":
/*!**************************************************!*\
  !*** ./node_modules/edtf/locale-data/it-IT.json ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"locale\":\"it-IT\",\"date\":{\"approximate\":{\"long\":\"circa %D\",\"medium\":\"ca. %D\",\"short\":\"c. %D\"},\"uncertain\":{\"long\":\"%D (?)\",\"medium\":\"%D (?)\",\"short\":\"%D (?)\"}}}');\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/locale-data/it-IT.json?");

/***/ }),

/***/ "./node_modules/edtf/locale-data/ja-JA.json":
/*!**************************************************!*\
  !*** ./node_modules/edtf/locale-data/ja-JA.json ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"locale\":\"ja-JA\",\"date\":{\"approximate\":{\"long\":\"%D頃\",\"medium\":\"%D頃\",\"short\":\"%D頃\"},\"uncertain\":{\"long\":\"%D頃\",\"medium\":\"%D頃\",\"short\":\"%D頃\"}}}');\n\n//# sourceURL=webpack://EdtfDataType/./node_modules/edtf/locale-data/ja-JA.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./asset/src/js/index.js");
/******/ 	EdtfDataType = __webpack_exports__;
/******/ 	
/******/ })()
;